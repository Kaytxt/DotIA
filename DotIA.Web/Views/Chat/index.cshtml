@{
    ViewData["Title"] = "DotIA - Chat";
    Layout = null;
}

<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        :root {
            --primary-purple: #8d4bff;
            --secondary-purple: #a855f7;
            --dark-bg: #1a132f;
            --darker-bg: #1e1433;
            --card-bg: #2c204d;
            --border-color: #3d2e6b;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            background: var(--dark-bg);
            color: #e5e7eb;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            overflow: hidden;
            height: 100vh;
        }

        .chat-container {
            display: grid;
            grid-template-columns: 300px 1fr;
            height: 100vh;
        }

        /* SIDEBAR */
        .sidebar {
            background: var(--dark-bg);
            border-right: 1px solid var(--border-color);
            display: flex;
            flex-direction: column;
            overflow: hidden;
        }

        .sidebar-header {
            padding: 20px;
            border-bottom: 1px solid var(--border-color);
        }

        .logo-container {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .logo-icon {
            width: 45px;
            height: 45px;
            background: linear-gradient(135deg, var(--primary-purple), var(--secondary-purple));
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 24px;
        }

        .logo-text {
            font-size: 24px;
            font-weight: 700;
            background: linear-gradient(135deg, var(--secondary-purple), #ec4899);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .btn-new-chat {
            background: linear-gradient(135deg, var(--primary-purple), var(--secondary-purple));
            border: none;
            border-radius: 12px;
            padding: 14px;
            color: white;
            font-weight: 600;
            transition: all 0.3s;
            margin: 20px;
        }

            .btn-new-chat:hover {
                transform: translateY(-2px);
                box-shadow: 0 8px 20px rgba(141, 75, 255, 0.4);
            }

        .history-container {
            flex: 1;
            overflow-y: auto;
            padding: 0 20px 20px;
        }

            .history-container::-webkit-scrollbar {
                width: 6px;
            }

            .history-container::-webkit-scrollbar-track {
                background: var(--card-bg);
                border-radius: 10px;
            }

            .history-container::-webkit-scrollbar-thumb {
                background: var(--primary-purple);
                border-radius: 10px;
            }

        .history-title {
            font-size: 12px;
            color: #9ca3af;
            text-transform: uppercase;
            letter-spacing: 1px;
            margin-bottom: 12px;
            padding: 0 8px;
        }

        .history-item {
            padding: 12px 16px;
            margin-bottom: 8px;
            background: var(--card-bg);
            border: 1px solid transparent;
            border-radius: 10px;
            cursor: pointer;
            transition: all 0.3s;
            color: #e5e7eb;
            font-size: 14px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

            .history-item:hover {
                background: var(--border-color);
                border-color: var(--primary-purple);
                transform: translateX(5px);
            }

            .history-item.active {
                border-color: var(--secondary-purple);
                background: var(--border-color);
            }

        .user-info {
            padding: 20px;
            border-top: 1px solid var(--border-color);
            background: var(--card-bg);
        }

        .user-avatar {
            width: 40px;
            height: 40px;
            background: linear-gradient(135deg, var(--primary-purple), var(--secondary-purple));
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        /* CHAT AREA */
        .chat-area {
            display: flex;
            flex-direction: column;
            background: var(--darker-bg);
            height: 100vh;
        }

        .chat-header {
            background: var(--dark-bg);
            border-bottom: 1px solid var(--border-color);
            padding: 20px 30px;
        }

        .chat-title {
            font-size: 20px;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .messages-container {
            flex: 1;
            overflow-y: auto;
            padding: 30px;
        }

            .messages-container::-webkit-scrollbar {
                width: 8px;
            }

            .messages-container::-webkit-scrollbar-track {
                background: var(--card-bg);
                border-radius: 10px;
            }

            .messages-container::-webkit-scrollbar-thumb {
                background: var(--primary-purple);
                border-radius: 10px;
            }

        .welcome-screen {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100%;
            text-align: center;
        }

        .welcome-icon {
            font-size: 80px;
            margin-bottom: 20px;
            animation: float 3s ease-in-out infinite;
        }

        @@keyframes float {
            0%, 100% {
                transform: translateY(0);
            }

            50% {
                transform: translateY(-20px);
            }
        }

        .welcome-title {
            font-size: 36px;
            font-weight: 700;
            background: linear-gradient(135deg, var(--secondary-purple), #ec4899);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin-bottom: 15px;
        }

        .message {
            display: flex;
            margin-bottom: 25px;
            animation: slideIn 0.3s ease-out;
        }

        @@keyframes slideIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .message.user {
            justify-content: flex-end;
        }

        .message-content {
            display: flex;
            gap: 12px;
            max-width: 70%;
        }

        .message.user .message-content {
            flex-direction: row-reverse;
        }

        .message-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 20px;
            flex-shrink: 0;
        }

        .message.user .message-avatar {
            background: linear-gradient(135deg, var(--primary-purple), var(--secondary-purple));
        }

        .message.bot .message-avatar {
            background: linear-gradient(135deg, #3b82f6, #8b5cf6);
        }

        .message.tech .message-avatar {
            background: linear-gradient(135deg, #10b981, #059669);
        }

        .message-bubble {
            background: var(--card-bg);
            padding: 16px 20px;
            border-radius: 18px;
        }

        .message.user .message-bubble {
            background: linear-gradient(135deg, var(--primary-purple), #7c3aed);
            border-bottom-right-radius: 4px;
        }

        .message.bot .message-bubble {
            border-bottom-left-radius: 4px;
        }

        .message.tech .message-bubble {
            background: linear-gradient(135deg, #059669, #047857);
            border-bottom-left-radius: 4px;
        }

        .tech-badge {
            display: inline-block;
            background: rgba(255, 255, 255, 0.2);
            padding: 4px 12px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: 600;
            margin-bottom: 8px;
        }

        .message-time {
            font-size: 11px;
            color: #9ca3af;
            margin-top: 8px;
        }

        .feedback-buttons {
            display: flex;
            gap: 10px;
            margin-top: 12px;
            padding-top: 12px;
            border-top: 1px solid rgba(255, 255, 255, 0.1);
        }

        .btn-feedback {
            flex: 1;
            padding: 8px;
            border: 1px solid rgba(255, 255, 255, 0.2);
            background: rgba(255, 255, 255, 0.05);
            border-radius: 8px;
            color: white;
            font-size: 13px;
            transition: all 0.3s;
        }

            .btn-feedback:hover:not(:disabled) {
                background: rgba(255, 255, 255, 0.1);
            }

            .btn-feedback:disabled {
                opacity: 0.5;
            }

        .typing-indicator {
            display: none;
        }

            .typing-indicator.active {
                display: flex;
                align-items: center;
                gap: 12px;
                padding: 16px 20px;
                background: var(--card-bg);
                border-radius: 18px;
                width: fit-content;
            }

        .typing-dot {
            width: 8px;
            height: 8px;
            background: var(--primary-purple);
            border-radius: 50%;
            animation: typing 1.4s infinite;
        }

            .typing-dot:nth-child(2) {
                animation-delay: 0.2s;
            }

            .typing-dot:nth-child(3) {
                animation-delay: 0.4s;
            }

        @@keyframes typing {
            0%, 60%, 100% {
                transform: translateY(0);
                opacity: 0.7;
            }

            30% {
                transform: translateY(-10px);
                opacity: 1;
            }
        }

        /* INPUT AREA - CORRIGIDO */
        .input-area {
            background: var(--dark-bg);
            border-top: 1px solid var(--border-color);
            padding: 25px 30px;
        }

        .input-wrapper {
            background: var(--card-bg);
            border: 2px solid var(--primary-purple);
            border-radius: 20px;
            padding: 15px 20px;
            display: flex;
            align-items: center;
            gap: 15px;
        }

            .input-wrapper:focus-within {
                border-color: var(--secondary-purple);
                box-shadow: 0 0 0 3px rgba(141, 75, 255, 0.1);
            }

        .input-icon {
            width: 50px;
            height: 50px;
            background: linear-gradient(135deg, var(--primary-purple), var(--secondary-purple));
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 24px;
            flex-shrink: 0;
        }

        #messageInput {
            flex: 1;
            background: transparent;
            border: none;
            color: white;
            resize: none;
            outline: none;
            font-size: 15px;
            line-height: 1.5;
            max-height: 150px;
            overflow-y: auto;
        }

            #messageInput::placeholder {
                color: #9ca3af;
            }

        .btn-send {
            background: linear-gradient(135deg, var(--primary-purple), var(--secondary-purple));
            border: none;
            border-radius: 12px;
            padding: 12px 30px;
            color: white;
            font-weight: 600;
            transition: all 0.3s;
            white-space: nowrap;
            flex-shrink: 0;
        }

            .btn-send:hover:not(:disabled) {
                transform: translateY(-2px);
                box-shadow: 0 8px 20px rgba(141, 75, 255, 0.4);
            }

            .btn-send:disabled {
                opacity: 0.5;
                cursor: not-allowed;
            }

        @@media (max-width: 768px) {
            .chat-container {
                grid-template-columns: 1fr;
            }

            .sidebar {
                display: none;
            }
        }
    </style>
</head>
<body>
    <div class="chat-container">
        <!-- SIDEBAR -->
        <div class="sidebar">
            <div class="sidebar-header">
                <div class="logo-container">
                    <div class="logo-icon">🤖</div>
                    <div class="logo-text">DotIA</div>
                </div>
            </div>

            <button class="btn-new-chat" onclick="novoChat()">
                <i class="bi bi-plus-circle"></i> Novo Chat
            </button>

            <div class="history-container">
                <div class="history-title">Histórico de Conversas</div>
                <div id="historyList"></div>
            </div>

            <div class="user-info d-flex align-items-center gap-3">
                <div class="user-avatar">👤</div>
                <div class="flex-grow-1">
                    <div class="fw-bold">@ViewBag.Nome</div>
                    <small class="text-success">● Online</small>
                </div>
                <a href="/Login/Sair" class="btn btn-sm btn-outline-light">
                    <i class="bi bi-box-arrow-right"></i>
                </a>
            </div>
        </div>

        <!-- CHAT AREA -->
        <div class="chat-area">
            <div class="chat-header">
                <div class="chat-title">
                    <span>💬</span>
                    <span id="chatTitle">DotIA - Assistente Inteligente</span>
                </div>
            </div>

            <div class="messages-container" id="messagesContainer">
                <div class="welcome-screen" id="welcomeScreen">
                    <div class="welcome-icon">🤖</div>
                    <div class="welcome-title">Bem-vindo ao DotIA!</div>
                    <p class="text-muted" style="max-width: 600px;">
                        Sou sua assistente virtual especializada em suporte técnico de TI.
                        Faça qualquer pergunta sobre tecnologia, problemas técnicos ou funcionamento do sistema.
                        Estou aqui para ajudar! 🚀
                    </p>
                </div>

                <div id="messagesList"></div>

                <div class="typing-indicator" id="typingIndicator">
                    <div class="d-flex gap-2">
                        <div class="typing-dot"></div>
                        <div class="typing-dot"></div>
                        <div class="typing-dot"></div>
                    </div>
                    <span>DotIA está digitando...</span>
                </div>
            </div>

            <div class="input-area">
                <div class="input-wrapper">
                    <div class="input-icon">💬</div>
                    <textarea id="messageInput"
                              placeholder="Digite sua pergunta aqui..."
                              rows="1"
                              onkeydown="handleKeyPress(event)"
                              oninput="autoResize(this)"></textarea>
                    <button class="btn-send" id="sendBtn" onclick="enviarMensagem()">
                        Enviar <i class="bi bi-send"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let chatAtual = null;
        let mensagensAtuais = [];

        // Carrega o histórico ao iniciar
        window.addEventListener('load', () => {
            carregarHistorico();
        });

        function autoResize(textarea) {
            textarea.style.height = 'auto';
            textarea.style.height = Math.min(textarea.scrollHeight, 150) + 'px';
        }

        function handleKeyPress(event) {
            if (event.key === 'Enter' && !event.shiftKey) {
                event.preventDefault();
                enviarMensagem();
            }
        }

        async function enviarMensagem() {
            const input = document.getElementById('messageInput');
            const mensagem = input.value.trim();

            if (!mensagem) return;

            // Esconde tela de boas-vindas
            document.getElementById('welcomeScreen').style.display = 'none';

            // Adiciona mensagem do usuário
            adicionarMensagem(mensagem, 'user');
            input.value = '';
            input.style.height = 'auto';

            // Desabilita botão de envio
            const sendBtn = document.getElementById('sendBtn');
            sendBtn.disabled = true;

            // Mostra indicador de digitação
            const typingIndicator = document.getElementById('typingIndicator');
            typingIndicator.classList.add('active');

            try {
                const response = await fetch('/Chat/EnviarPergunta', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ pergunta: mensagem })
                });

                const data = await response.json();
                typingIndicator.classList.remove('active');

                if (data.sucesso) {
                    adicionarMensagem(data.resposta, 'bot', mensagem);
                    // Recarrega o histórico após enviar
                    await carregarHistorico();
                    // Verifica se há resposta do técnico
                    await verificarRespostaTecnico(mensagem);
                } else {
                    adicionarMensagem('Desculpe, ocorreu um erro ao processar sua pergunta.', 'bot');
                }
            } catch (error) {
                typingIndicator.classList.remove('active');
                adicionarMensagem('Erro ao conectar com o servidor.', 'bot');
                console.error('Erro:', error);
            } finally {
                sendBtn.disabled = false;
            }
        }

        function adicionarMensagem(texto, tipo, perguntaOriginal = '') {
            const messagesList = document.getElementById('messagesList');
            const now = new Date();
            const time = now.toLocaleTimeString('pt-BR', { hour: '2-digit', minute: '2-digit' });

            let avatar = '';
            let badge = '';

            if (tipo === 'user') avatar = '👤';
            else if (tipo === 'bot') avatar = '🤖';
            else if (tipo === 'tech') {
                avatar = '🛠️';
                badge = '<div class="tech-badge">✓ Resposta do Técnico</div>';
            }

            let feedbackHTML = '';
            if (tipo === 'bot') {
                feedbackHTML = `
                        <div class="feedback-buttons">
                            <button class="btn-feedback" onclick="avaliarResposta('${escapeHtml(perguntaOriginal)}', '${escapeHtml(texto)}', true, this)">
                                👍 Foi útil
                            </button>
                            <button class="btn-feedback" onclick="avaliarResposta('${escapeHtml(perguntaOriginal)}', '${escapeHtml(texto)}', false, this)">
                                👎 Não ajudou
                            </button>
                        </div>
                    `;
            }

            const messageDiv = document.createElement('div');
            messageDiv.className = `message ${tipo}`;
            messageDiv.innerHTML = `
                    <div class="message-content">
                        <div class="message-avatar">${avatar}</div>
                        <div class="message-bubble">
                            ${badge}
                            <div class="message-text">${texto}</div>
                            <div class="message-time">${time}</div>
                            ${feedbackHTML}
                        </div>
                    </div>
                `;

            messagesList.appendChild(messageDiv);

            // Scroll automático para a última mensagem
            const container = document.getElementById('messagesContainer');
            container.scrollTop = container.scrollHeight;
        }

        function escapeHtml(text) {
            const div = document.createElement('div');
            div.textContent = text;
            return div.innerHTML.replace(/'/g, "\\'");
        }

        async function avaliarResposta(pergunta, resposta, foiUtil, button) {
            const buttons = button.parentElement.querySelectorAll('.btn-feedback');
            buttons.forEach(btn => btn.disabled = true);

            try {
                const response = await fetch('/Chat/AvaliarResposta', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ pergunta, resposta, foiUtil })
                });

                if (response.ok) {
                    button.style.opacity = '1';
                    button.style.transform = 'scale(1.1)';
                    setTimeout(() => {
                        button.style.transform = 'scale(1)';
                    }, 200);

                    if (!foiUtil) {
                        // Cria um modal de confirmação
                        const confirmDiv = document.createElement('div');
                        confirmDiv.style.cssText = `
                                position: fixed;
                                top: 50%;
                                left: 50%;
                                transform: translate(-50%, -50%);
                                background: linear-gradient(135deg, #2c204d, #1e1433);
                                padding: 30px;
                                border-radius: 20px;
                                border: 2px solid #8d4bff;
                                box-shadow: 0 20px 60px rgba(0, 0, 0, 0.5);
                                z-index: 10000;
                                text-align: center;
                                min-width: 400px;
                            `;
                        confirmDiv.innerHTML = `
                                <div style="font-size: 48px; margin-bottom: 20px;">📨</div>
                                <h3 style="color: #a855f7; margin-bottom: 15px;">Ticket Criado!</h3>
                                <p style="color: #e5e7eb; margin-bottom: 20px;">
                                    Sua solicitação foi encaminhada para um técnico especializado.<br>
                                    Você receberá uma resposta em breve.
                                </p>
                                <button onclick="this.parentElement.remove()" style="
                                    background: linear-gradient(135deg, #8d4bff, #a855f7);
                                    border: none;
                                    padding: 12px 30px;
                                    border-radius: 10px;
                                    color: white;
                                    font-weight: 600;
                                    cursor: pointer;
                                ">OK, Entendi</button>
                            `;
                        document.body.appendChild(confirmDiv);

                        // Remove automaticamente após 5 segundos
                        setTimeout(() => confirmDiv.remove(), 5000);
                    } else {
                        // Feedback positivo
                        const successDiv = document.createElement('div');
                        successDiv.style.cssText = `
                                position: fixed;
                                top: 20px;
                                right: 20px;
                                background: linear-gradient(135deg, #10b981, #059669);
                                padding: 15px 25px;
                                border-radius: 12px;
                                color: white;
                                font-weight: 600;
                                z-index: 10000;
                                animation: slideInRight 0.3s ease-out;
                            `;
                        successDiv.innerHTML = '✓ Obrigado pelo feedback! 😊';
                        document.body.appendChild(successDiv);
                        setTimeout(() => successDiv.remove(), 3000);
                    }
                }
            } catch (error) {
                console.error('Erro ao avaliar:', error);
                buttons.forEach(btn => btn.disabled = false);
            }
        }

        async function carregarHistorico() {
            try {
                const response = await fetch('/Chat/ObterHistorico');
                const historico = await response.json();

                const historyList = document.getElementById('historyList');
                historyList.innerHTML = '';

                if (historico.length === 0) {
                    historyList.innerHTML = `
                            <div style="text-align: center; padding: 20px; color: #9ca3af; font-size: 13px;">
                                Nenhum histórico ainda.<br>Comece uma conversa!
                            </div>
                        `;
                    return;
                }

                historico.forEach(chat => {
                    const item = document.createElement('div');
                    item.className = 'history-item';
                    item.textContent = chat.titulo || chat.pergunta.substring(0, 30) + '...';
                    item.onclick = () => carregarChat(chat);
                    historyList.appendChild(item);
                });
            } catch (error) {
                console.error('Erro ao carregar histórico:', error);
            }
        }

        function carregarChat(chat) {
            document.getElementById('welcomeScreen').style.display = 'none';
            const messagesList = document.getElementById('messagesList');
            messagesList.innerHTML = '';

            // Adiciona a pergunta e resposta do chat selecionado
            adicionarMensagem(chat.pergunta, 'user');
            adicionarMensagem(chat.resposta, 'bot', chat.pergunta);

            document.getElementById('chatTitle').textContent = chat.titulo || 'Chat';

            // Marca como ativo no histórico
            document.querySelectorAll('.history-item').forEach(item => {
                item.classList.remove('active');
                if (item.textContent === (chat.titulo || chat.pergunta.substring(0, 30) + '...')) {
                    item.classList.add('active');
                }
            });
        }

        async function verificarRespostaTecnico(pergunta) {
            // Aqui você pode implementar uma lógica para verificar
            // se existe resposta do técnico para essa pergunta
            // Por enquanto, vamos deixar preparado para quando houver
        }

        function novoChat() {
            document.getElementById('messagesList').innerHTML = '';
            document.getElementById('welcomeScreen').style.display = 'flex';
            document.getElementById('chatTitle').textContent = 'DotIA - Assistente Inteligente';
            document.getElementById('messageInput').focus();

            // Remove seleção ativa do histórico
            document.querySelectorAll('.history-item').forEach(item => {
                item.classList.remove('active');
            });
        }
    </script>
</body>
</html>